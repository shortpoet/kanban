version: "3.4"

services:
  # kanban.client:
  #   image: kanban.client:alpine
  #   depends_on:
  #     - db
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile.client.alpine
  #   tty: true
  #   stdin_open: true
  #   working_dir: /usr/src/app
  #   env_file:
  #     - "docker.env"
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./client:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - kanbannet
  #   command: yarn serve

  kanban.server:
    image: kanban.server:alpine
    depends_on:
      - db
    build:
      context: .
      dockerfile: docker/Dockerfile.server.alpine
    tty: true
    stdin_open: true
    working_dir: /usr/src/app
    env_file:
      - "docker.env"
    environment:
      NODE_ENV: production
    ports:
      - 5000:5000
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - kanbannet
    command: yarn start:graph
    entrypoint: ./docker-entrypoint.sh

  # https://gist.github.com/onjin/2dd3cc52ef79069de1faa2dfd456c945
  db:
    image: postgres:12
    # restart: always
    restart: unless-stopped
    # file must end in .sql not .psql
    volumes:
      - ./sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - "docker.env"
    ports:
      - 5432:5432
    networks:
      - kanbannet

networks:
  kanbannet:

volumes:
  postgres-data:
